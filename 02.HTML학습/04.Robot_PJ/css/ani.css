@charset "utf-8";
/* 로봇PJ 애니메이션 CSS - ani.css */

/***************************************************** 
    [ CSS로 애니메이션 하기 ]

    - 시간에 따라 CSS설정이 변경되어 애니메이션
    되도록 키프레임을 설정하고 이것을 호출함으로
    의도된 연출을 구현하는 것. 
    ->>> 이것이 CSS 애니메이션이다!

    [ 애니메이션 키프레임 만들기 ]
    - 키프레임이란? 애니메이션 장면을 넣는 코드

    1. 두장면 애니메이션

    @keyframes 키프레임명{
        from{시작CSS}
        to{끝나는CSS}
    }

    또는

    @keyframes 키프레임명{
        0%{시작CSS}
        100%{끝나는CSS}
    }

    -> 만약 from 설정이 초기설정과 같다면
        from을 생략할 수 있다!

    2. 여러장면 키프레임

    @keyframes 키프레임명{
        0%{CSS설정}
        10%{CSS설정}
        20%{CSS설정}
        ...
        70%{CSS설정}
        80%{CSS설정}
        90%{CSS설정}
        100%{CSS설정}
    }

    (1) 장면에 대한 시간계산은 어떻게 하나?
    -> 전체시간 * 설정된% / 100

    (2) 전체 애니메이션 시간은 언제 셋팅하나?
    -> 호출시에 셋팅!

    [ 설정된 키프레임 호출하는 방법 ]

    animation: 이시이지반방마
    (이름 시간 이징 지연 반복 방향 마지막상태)

    1. 이름(animation-name) : 키프레임 이름

    2. 시간(animation-duration) : 애니메이션 동작시간
        -> 초단위(s)

    3. 이징(animation-timing-function) : easing가속도

    4. 지연(animation-delay) : 애니메이션 지연시간(s)

    5. 반복(animation-iteration-count) : 애니메이션 반복
        - 기본값 1, 숫자를 쓰면 숫자만큼 반복
        - 영원히 infinite(인피니트)

    6. 방향(animation-direction) : 시작 -> 끝
        - 두번이상 반복할 경우 반대경로로 애니메이션 설정가능
        -> alternate : 시작 -> 끝 , 끝 -> 시작

    7. 마지막 상태(animation-fill-mode) :
        - 애니메이션이 끝났을때 처음으로 돌아가는게 기본!
        -> forwards (앞쪽에...즉, 애니메이션 끝장면으로 마무리!)
        -> 기본값 : backwards(뒤쪽으로, 즉 처음으로!)
        -> 유의사항 : infinite(영원히)일때는 해당사항없음!


*************************************************************/


/* 1. 로고 */
.logo{
    /* 
        [ 정중앙 이동하기 : 방법1 ]
        50%씩 top,left를 밀고 (4사분면위치)
        자신의 크기의 절반씩 반대방향으로이동함

        [ CSS계산함수 ]
        calc(계산식) -> 4칙연산가능
        - 주의1: 뺄셈, 덧셈 기호 앞뒤 공백필수
            (곱셈, 나눗셈 기호는 붙여써도 됨)
        - 주의2: 숫자에 반드시 단위가 있어야함!(더하기/빼기에서)
        
        calc(50% - 특정px)
        ->>주의: 마이너스 기호 앞뒤를 반드시 띄어쓸것!
    */
    top: calc(50% - 102px);
    left: calc(50% - 102px);
    /* 로고는 204px이므로 절반은 102px */

    /* 
        [ 정중앙 이동하기 : 방법2 ]
        - top, left값을 50% 로 설정한후
        -> transform: translate(-50%,-50%)
        즉, 현재 위치에서 내 크기의 절반만큼 왼쪽, 윗쪽으로 이동!
    */
    /* top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); */

    /* 트랜스폼 스케일 2배확대 */
    transform: scale(2);

    /* 애니메이션: 이시이지반방마 */
    animation: 
    /* 중앙에서 왼쪽위로 이동애니 */
    logoAni 2s ease-in-out 1s forwards,
    /* 이동후 반복회전애니 */
    logoAni2 .5s ease-in-out 3s infinite alternate;

}

/* 로고애니 키프레임 */
@keyframes logoAni {
    /* 초기설정이 from 이므로 생략! */
    80%{
        /* 원래 위치와 크기로! */
        top: 50px;
        left: 50px;
        transform: scale(1) rotate(0deg);
    }
    100%{
        top: 50px;
        left: 50px;
        /* 회전위치 맞추기! */
        transform: scale(1) rotate(20deg);
    }
} /* 키프레임 */

/* 흔들기 로고애니 키프레임 */
@keyframes logoAni2 {
    0%{
        transform: rotate(20deg);
    }
    100%{
        transform: rotate(-20deg);
    }
} /* 키프레임 */



/* 2. 로봇머리 */
.head{
    /* 윗쪽 화면바깥에 위치 */
    top: -500px;
    /* top값에 %가 적용안되는 이유:
    부모박스의 높이값이 auto 즉, 지정하지
    않아서 적용안됨. 특정크기를 주면 적용됨! */

    /* 애니메이션: 이시이지반방마 */
    animation: headAni 1s ease-out 2.5s forwards;
}

/* 로봇머리 등장 키프레임 */
@keyframes headAni {
    to{
        /* 원래위치로! */
        top: 0;
    }
} /* 키프레임 */

/* 3. 로봇몸 */
.body{
    left: -100%;
    /* 가로크기는 끝까지 채우는 크기이므로
    %단위가 바로 적용된다! */

    /* 애니메이션: 이시이지반방마 */
    animation: bodyAni 1s ease-out 2s forwards;
}

/* 로봇몸 등장 키프레임 */
@keyframes bodyAni {
    to{
        /* 원래위치로! */
        left: 0;
    }
} /* 키프레임 */

/* 4. 설명링크 */
.link{
    /* 투명상태 */
    opacity: 0;
    /* 애니메이션: 이시이지반방마 */
    animation: opaAni 1s linear 4.5s forwards;
}

/* 5. 위로가기 버튼 */
.btnTop{
    /* 투명상태 */
    opacity: 0;
    /* 애니메이션: 이시이지반방마 */
    animation: opaAni 1s linear 5s forwards;
}

/* 6. TV */
.tv{
    /* 투명상태 */
    opacity: 0;
    /* 애니메이션: 이시이지반방마 */
    animation: opaAni 1s linear 4s forwards;
}

/* 설명링크, 위로이동버튼, TV 등장 공통 키프레임 */
@keyframes opaAni {
    /* 보였다 안보였다! */
    20%{
        opacity: 1;
    }
    40%{
        opacity: 0;
    }
    60%{
        opacity: 1;
    }
    80%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
} /* 키프레임 */

/* 7. 오른팔 */
.a2 {
    /* 회전축변경(세로 상단) */
    transform-origin: center 20px;
    /* 애니메이션: 이시이지반방마 */
    animation: 
    a2Ani .4s ease-in-out 6s forwards,
    a2Ani2 .2s linear 6.4s infinite alternate;
}
/* 오른팔 올리기 애니 */
@keyframes a2Ani {
    to{
        transform: rotate(-150deg);
    }
}/* 키프레임 */

/* 팔흔들기 애니 */
@keyframes a2Ani2 {
    to{
        transform: rotate(-140deg);
    }
} /* 키프레임 */

/* 8. 입 */
.mouth{
    /* 애니메이션: 이시이지반방마 */
    animation: 
    mouthAni .05s linear 6s infinite alternate;
}
/* 입 애니 키프레임 */
@keyframes mouthAni {
    to{
        transform: scaleY(.5);
    }
} /* 키프레임 */